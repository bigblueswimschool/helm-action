{{- if (.Values.path) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ required "A valid .Values.name entry required!" .Values.name }}-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{- if (.Values.cors) }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "DELETE, GET, HEAD, OPTIONS, POST, PUT"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Accepts, Content-Type, Authorization, X-Access-Token, Client-Platform-ID, UTM-Code-ID, X-Request-Source"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    {{- end }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.clusterIssuer.name | quote }}
    kubernetes.io/tls-acme: "true"
    {{- if (.Values.websocket) }}
    nginx.org/websocket-services: {{ .Values.name }}
    {{- end }}
spec:
  rules:
  - host: {{ required "A valid .Values.domain entry required!" $.Values.domain }}
    http:
      paths:
        - path: {{ required "A valid .Values.path entry required!" .Values.path }}
          backend:
            serviceName: {{ .Values.name }}
            servicePort: {{ .Values.port | default 3000 }}
  tls:
  - hosts:
    - {{ required "A valid .Values.domain entry required!" $.Values.domain }}
    secretName: {{ $.Release.Name }}-secret
---
{{- end }}